ext {
    //Jenkins 打包修改版本使用日常开发删除 zjol.properties
    file = project.rootProject.file('zjol.properties')
    if (file != null && file.exists()) {
        Properties properties = new Properties()
        InputStream inputStream = file.newDataInputStream()
        properties.load(inputStream)

        appVersionCode = Integer.parseInt(properties.getProperty("appVersionCode"))
        appVersionName = properties.getProperty('appVersionName')
        env = properties.getProperty('env')
        passport = properties.getProperty('passport')
        String[] params = passport.split("#")
        if (params.length != 2) {
            throw new IllegalArgumentException("打包参数错误,请检测服务器地址和ClientID是否配置")
        }
        scheme = "http"
        isDebug = Boolean.parseBoolean(properties.getProperty("isDebug"))
    } else {
        appVersionCode = 10000
        appVersionName = "1.0.0"
        passport = "https://passport-test.8531.cn#21"
        env = "apibeta.zjol.com.cn"
        scheme = "https"
        isDebug = true
    }

    //签名相关
    signFile = file("${project.getProjectDir()}/sign/sign.keystore")
    if (signFile == null || !signFile.exists()) {
        throw new FileNotFoundException("签名文件不存在")
    }
    signProperiesFile = file("${project.getProjectDir()}/sign/sign.properties")
    if (signProperiesFile == null || !signProperiesFile.exists()) {
        throw new FileNotFoundException("签名密码和别名属性文件不存在")
    }

    signProperies = new Properties()
    signProperies.load(signProperiesFile.newDataInputStream())

    password = signProperies.getProperty('password')
    alias = signProperies.getProperty('alias')
    alias_password = signProperies.getProperty('alias_password')

}

ext.readKeys = { buildType ->
    //程序中的KEY 配置
    String keysName = 'keys-release.properties'
    if (isDebug) {
        keysName = 'keys-debug.properties'
    }

    Properties properties = new Properties()
    properties.load(new FileInputStream(keysName))

    buildType.resValue "string", "env_host_default", env
    buildType.resValue "string", "env_scheme_default", scheme
    buildType.resValue "string", "passport_default", passport
    buildType.resValue("string", "BUGLY_APPID", properties.getProperty("BUGLY_APPID"))
    buildType.manifestPlaceholders = [
            GETUI_APP_ID    : properties.getProperty("GETUI_APP_ID"),
            GETUI_APP_SECRET: properties.getProperty("GETUI_APP_SECRET"),
            GETUI_APP_KEY   : properties.getProperty("GETUI_APP_KEY")
    ]
}
apply plugin: 'com.android.application'
apply from: 'version.gradle'
apply plugin: 'walle'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "cn.com.zjol"
        minSdkVersion 17
        targetSdkVersion 28
        versionCode appVersionCode
        versionName appVersionName

        multiDexEnabled true

        manifestPlaceholders = [
                GETUI_APP_ID    : "2MVOsU8WYe83jWIfdja4x4",
                GETUI_APP_KEY   : "yJ717iAQz48GKqT8YvYMIA",
                GETUI_APP_SECRET: "xX4QK0AJrLAQFjfcKlkjNA",
                // 个推 - 小米辅助推送
                XIAOMI_APP_ID   : "",
                XIAOMI_APP_KEY  : "",
                // 个推 - 华为辅助推送
                HUAWEI_APP_ID   : "",
                // 个推 - 魅族辅助推送
                MEIZU_APP_ID    : "",
                MEIZU_APP_KEY   : "",
                //个象id
                INSIGHT_ID      : ""
        ]

        ndk {
            // 腾讯短视频SDK要求：如果使用的是商业版，只能使用 armeabi 架构
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    signingConfigs {
        zjol {
            storeFile signFile
            storePassword password
            keyAlias alias
            keyPassword alias_password
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            readKeys(debug)
            signingConfig signingConfigs.zjol
            buildConfigField "boolean", "API_DEBUG", "true"
            minifyEnabled false
            debuggable isDebug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            readKeys(release)
            signingConfig signingConfigs.zjol
            buildConfigField "boolean", "API_DEBUG", "false"
            minifyEnabled true
            debuggable isDebug
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

/*
  美团打包命令
  生成全部渠道包：./gradlew clean assembleReleaseChannels
  生成大屏渠道包：./gradlew clean assembleReleaseChannels -PchannelList=big
  生成部分渠道包：./gradlew clean assembleReleaseChannels -PchannelList=xiaomi
 */
walle {

    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    apkFileNameFormat = '${channel}-v${versionName}-${versionCode}-${buildTime}.apk'
    channelFile = new File("${project.getProjectDir()}/channel")
}
